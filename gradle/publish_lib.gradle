// Create the pom configuration:
def pomConfig = {
    name = libraryPomName
    description = libraryPomDescription
    url = POM_PROJECT_URL
    licenses {
        license {
            name = POM_LICENSE_NAME
            url = POM_LICENSE_URL
            distribution = POM_LICENSE_DISTRIBUTION
        }
    }
    developers {
        developer {
            id = "davidgarcia"
            name = "David GarcÃ­a"
            email = "david.garcia@inqbarna.com"
        }
    }

    scm {
        url = POM_PROJECT_URL
    }
}

tasks.dokkaHtml.configure {
    outputDirectory.set(new File(buildDir, "dokka"))
    moduleName.set(libraryPomName)
    dokkaSourceSets {
        configureEach {
            noAndroidSdkLink.set(false)
        }
    }
}

tasks.dokkaJavadoc.configure {
    outputDirectory.set(new File(buildDir, "javadoc"))
    moduleName.set(libraryPomName)
    dokkaSourceSets {
        configureEach {
            noAndroidSdkLink.set(false)
        }
    }
}

task androidSourcesJar(type: Jar) {
    from android.sourceSets.main.java.source
    archiveClassifier.set('sources')
}

//task javadoc(type: Javadoc) {
//    source = android.sourceSets.main.java.srcDirs
//    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
//}

task dokkaJavadocJar(type: Jar, dependsOn: dokkaJavadoc) {
    from(tasks.getByName("dokkaJavadoc").outputDirectory)
    archiveClassifier.set("javadoc")
}

task dokkaHtmlJar(type: Jar, dependsOn: dokkaHtml) {
    from(tasks.getByName("dokkaHtml").outputDirectory)
    archiveClassifier.set("javadoc")
}


def printObj = { o ->
    def filtered = ['class', 'active']

    println o.properties
            .sort { it.key }
            .collect { it }
            .findAll { !filtered.contains(it.key) }
            .join('\n')
}

if (project.hasProperty('ossUser')) {

    apply plugin: 'maven-publish'
    apply plugin: "signing"

    def pubName = "${libraryArtifactId}LibraryPublication"
    afterEvaluate {

        publishing {
            publications {
                "$pubName"(MavenPublication) {
                    from components.release
                    groupId = LIBRARY_GROUP_ID
                    artifactId = libraryArtifactId
                    version = libraryVersion
                    artifact androidSourcesJar
//                    artifact dokkaJavadocJar
                    artifact dokkaHtmlJar

                    pom(pomConfig)
                }
            }

            repositories {
                maven {
                    name = "OSSS01"
                    def snapshotUrl = "https://s01.oss.sonatype.org/content/repositories/snapshots/"
                    def stagingUrl = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
                    url = version.endsWith("SNAPSHOT") ? snapshotUrl : stagingUrl
                    credentials {
                        username = project.property("ossUser")
                        password = project.property("ossToken")
                    }
                }
            }
        }

        signing {
            useGpgCmd()
            sign publishing.publications."$pubName"
        }
    }

}
